{% extends 'user/usermenu.html.twig' %}

{% set tab_active = 'album' %}

{% block extracss %}

    {{ encore_entry_link_tags('css/album_css') }}

    <!-- blueimp Gallery styles -->

{% endblock %}
{% block main %}

    <div class="container" role="main">
        <div class="card border-secondary mb-3" style="max-width: 40rem;">
            <div class="card-header"><h4>Fotos toevoegen en aanpassen</h4></div>
            <div class="card-body">
                <h4 class="card-title">Voeg hier je fotos toe</h4>
                <span class="card-text">
                    <ul>
                        <li>Je kunt maximaal <strong>6</strong> fotos toevoegen.</li><!-- see src/Klik/ProfielBundle/Resources/public/js/blueimp/jquery.fileupload-ui.js  -->
                        <li>Je fotos mogen maximaal <strong>5 MB</strong> zijn.</li>
                        <li>Alleen image bestanden (<strong>JPG, GIF, PNG</strong>) zijn toegestaan.</li>
                    </ul>
                </span>
            </div>
        </div>

    <!-- The file upload form used as target for the file upload widget -->
    <form id="fileupload" action="/nl/album/upload" method="POST" enctype="multipart/form-data">
        <!-- Redirect browsers with JavaScript disabled to the origin page -->
        <noscript><input type="hidden" name="redirect" value="https://blueimp.github.io/jQuery-File-Upload/" /></noscript>
        <!-- The fileupload-buttonbar contains buttons to add/delete files and start/cancel the upload -->
        <div class="row fileupload-buttonbar">
            <div class="col-lg-7">
                <!-- The fileinput-button span is used to style the file input field as button -->
                <span class="btn btn-success fileinput-button">
              <i class="glyphicon glyphicon-plus"></i>
              <span>Fotos toevoegen...</span>
              <input type="file" name="files[]" multiple />
            </span>

                <!-- The global file processing state -->
                <span class="fileupload-process"></span>
            </div>
            <!-- The global progress state -->
            <div class="col-lg-5 fileupload-progress fade">
                <!-- The global progress bar -->
                <div
                        class="progress progress-striped active"
                        role="progressbar"
                        aria-valuemin="0"
                        aria-valuemax="100"
                >
                    <div
                            class="progress-bar progress-bar-success"
                            style="width:0%;"
                    ></div>
                </div>
                <!-- The extended global progress state -->
                <div class="progress-extended">&nbsp;</div>
            </div>
        </div>
        <!-- The loading indicator is shown during file processing -->
        <div class="fileupload-loading"></div>
        <br>
        <!-- The table listing the files available for upload/download -->
        <table role="presentation" class="table table-striped">
            <tbody class="files"></tbody>
        </table>
    </form>
</div>
<!-- The blueimp Gallery widget -->
<div id="blueimp-gallery" class="blueimp-gallery blueimp-gallery-controls" data-filter=":even">
    <div class="slides"></div>
    <h3 class="title"></h3>
    <a class="prev">‹</a>
    <a class="next">›</a>
    <a class="close">×</a>
    <a class="play-pause"></a>
    <ol class="indicator"></ol>
</div>
{% verbatim %}
<!-- We are using autoload but we still need this part or it will not work -->
<script id="template-upload" type="text/x-tmpl">
      {% for (var i=0, file; file=o.files[i]; i++) { %}
          <tr class="template-upload ">
              <td>
                  <span class="preview"></span>
              </td>
              <td>
                  {% if (window.innerWidth > 480 || !o.options.loadImageFileTypes.test(file.type)) { %}
                      <p class="name">{%=file.name%}</p>
                  {% } %}
                  <strong class="error text-danger"></strong>
              </td>
              <td>
                  <p class="size">Processing...</p>
                  <div class="progress progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0">
                    <div class="progress-bar progress-bar-success" style="width:0%;">
                    </div>
                  </div>
              </td>
              <td>
                  {% if (!o.options.autoUpload && o.options.edit && o.options.loadImageFileTypes.test(file.type)) { %}
                    <button class="btn btn-success edit" data-index="{%=i%}" disabled>
                        <i class="glyphicon glyphicon-edit"></i>
                        <span>Edit</span>
                    </button>
                  {% } %}
                  {% if (!i && !o.options.autoUpload) { %}
                      <button class="btn btn-primary start" disabled>
                          <i class="glyphicon glyphicon-upload"></i>
                          <span>Start</span>
                      </button>
                  {% } %}
                  {% if (!i) { %}
                      <button class="btn btn-warning cancel">
                          <i class="glyphicon glyphicon-ban-circle"></i>
                          <span>Cancel</span>
                      </button>
                  {% } %}
              </td>
          </tr>
      {% } %}
    </script>
<!-- The template that comes on page load -->
<script id="template-download" type="text/x-tmpl">
      {% for (var i=0, file; file=o.files[i]; i++) { %}
           {% if (file.mainfoto == 1) { %}
          <tr class="template-download  border" id="row_profilepic">
          {% }else  { %}
          <tr class="template-download ">
          {% } %}
              <td>
                  <span class="preview">
                      {% if (file.thumbnailUrl) { %}
                          <a href="{%=file.url%}" title="{%=file.name%}" download="{%=file.name%}" data-gallery><img src="{%=file.thumbnailUrl%}"></a>
                      {% } %}
                  </span>
                  {% if (file.error) { %}
                      <div><span class="label label-danger">Error</span> {%=file.error%}</div>
                  {% } %}
              </td>
              <td>
                 <input type="hidden" download="{%=file.name%}" data-gallery />
              </td>
              <td data-url="{%=file.mainimageUrl%}">
                    {% if (file.mainfoto == 1) { %}
                    <div class="alert alert-dismissible alert-success" >
                        <i class="fa fa-arrow-left"></i><i class="fa fa-user"></i>
                        <span id="profilepic">Dit is de Profielfoto</span>
                    </div>
                    {% }else  { %}
                        <button class="btn btn-info change-main-image" data-type="CHANGE_THE_MAIN_IMAGE" data-url="{%=file.mainimageUrl%}"  {% if (file.main_image_with_credentials) { %} data-xhr-fields='{"withCredentials":true}'{% } %}>
                            <i class="fa fa-arrow-up"></i>
                            <span>Maak Profielfoto</span>
                       </button>
                    {% } %}
              </td>
              <td>
                  {% if (file.deleteUrl) { %}
                      <button class="btn btn-danger delete {% if (file.mainfoto == 1) { %} mainpic {% } %}" data-type="{%=file.deleteType%}" data-url="{%=file.deleteUrl%}">
                          <i class="fa fa-trash-alt fa-1x"></i>
                          <span>Verwijder</span>
                      </button>
                  {% } else { %}
                      <button class="btn btn-warning cancel">
                          <i class="glyphicon glyphicon-ban-circle"></i>
                          <span>Cancel</span>
                      </button>
                  {% } %}
              </td>
          </tr>
      {% } %}
    </script>
    {% endverbatim %}

{% endblock %}

{% block javascripts %}

    {{ parent() }}
    <!-- This whole encore thing is a hard to get working, something to do with scope for sure. Maybe in the future we manage to fix it-->
  {# {{ encore_entry_script_tags('js/album') }}#}

<script src="https://blueimp.github.io/jQuery-File-Upload/js/vendor/jquery.ui.widget.js"></script>
<!-- The Templates plugin is included to render the upload/download listings -->
<script src="https://blueimp.github.io/JavaScript-Templates/js/tmpl.min.js"></script>
<!-- The Load Image plugin is included for the preview images and image resizing functionality -->
<script src="https://blueimp.github.io/JavaScript-Load-Image/js/load-image.all.min.js"></script>
<!-- The Canvas to Blob plugin is included for image resizing functionality -->
<script src="https://blueimp.github.io/JavaScript-Canvas-to-Blob/js/canvas-to-blob.min.js"></script>

<!-- blueimp Gallery script -->
<script src="https://blueimp.github.io/Gallery/js/jquery.blueimp-gallery.min.js"></script>

<!-- The Iframe Transport is required for browsers without support for XHR file uploads -->
<script src="https://blueimp.github.io/jQuery-File-Upload/js/jquery.iframe-transport.js"></script>

<!-- The basic File Upload plugin -->
<script src="https://blueimp.github.io/jQuery-File-Upload/js/jquery.fileupload.js"></script>

<!-- The File Upload processing plugin -->
<script src="https://blueimp.github.io/jQuery-File-Upload/js/jquery.fileupload-process.js"></script>
<!-- The File Upload image preview & resize plugin -->
<script src="https://blueimp.github.io/jQuery-File-Upload/js/jquery.fileupload-image.js"></script>
<!-- The File Upload validation plugin -->
<script src="https://blueimp.github.io/jQuery-File-Upload/js/jquery.fileupload-validate.js"></script>
<!-- The File Upload user interface plugin -->
<script src="https://blueimp.github.io/jQuery-File-Upload/js/jquery.fileupload-ui.js"></script>


<script type="application/javascript">

    $(function() {
        'use strict';

        // Initialize the jQuery File Upload widget
        // Will activate as soon as upload button is clicked
        $('#fileupload').fileupload({
            // Uncomment the following to send cross-domain cookies:
            // See options:  https://github.com/blueimp/jQuery-File-Upload/wiki/Options
            url: '/nl/album/upload',
            maxNumberOfFiles: 6,
            singleFileUploads: true,
            autoUpload: true,
            maxFileSize: 999000,
            acceptFileTypes: /(\.|\/)(gif|jpe?g|png)$/i
        });

        $('#fileupload').addClass('fileupload-processing');

        // This loads the list of pics from reading the database
        // We put it in a function so we can re-use it
        function loadList() {
            // We need this to avoid double lists, on page reload it does not harm anyway
            $('tbody.files').empty();

            $.ajax({
                // Uncomment the following to send cross-domain cookies:
                //xhrFields: {withCredentials: true},
                url: '/nl/album/upload',
                dataType: 'json',
                context: $('#fileupload')[0]
            })
            .always(function () {
                    $(this).removeClass('fileupload-processing');
            })
            .done(function (result) {

                $(this).fileupload('option', 'done')
                    .call(this, $.Event('done'), {result: result});
            });
        }
        // Call the list on page load
        loadList();

        // Add the eventhandlers for making main profile pictures
        $('#fileupload').on('fileuploadcompleted', function (e) {

           // We have the logic for when the make_profielfoto button is clicked
           $('button.change-main-image').once('click', function (event) {
               event.preventDefault();
               $.ajax({
                   url: $(this).data('url'),
                   dataType: 'json',
                   type: 'POST'
               })
               .done( loadList );
           });
         });

        // When we delete the mainpic we need a page refresh to show the new main pic again
        $('#fileupload').bind('fileuploaddestroy', function (e, data) {
            if ($(data.context.prevObject[0]).hasClass('mainpic')) {
                location.reload();
            }
        });

         // helper function to attach a event handler only once
         $.fn.once = function(a, b) {
           return this.each(function() {
               $(this).off(a).on(a,b);
           });
         };
    });


</script>
<!-- The XDomainRequest Transport is included for cross-domain file deletion for IE 8 and IE 9 -->
<!--[if (gte IE 8)&(lt IE 10)]>
<script src="js/cors/jquery.xdr-transport.js"></script>
<![endif]-->

{% endblock %}

